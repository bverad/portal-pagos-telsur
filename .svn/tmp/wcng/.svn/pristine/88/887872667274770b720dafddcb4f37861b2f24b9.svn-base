package cl.devetel.pagostelsur;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.TestConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.core.env.Environment;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import cl.devetel.canalgmp.jdbc.dao.TransaccionDao;
import cl.devetel.canalgmp.jdbc.dao.mysql.Impl.TransaccionDaoImpl;
import cl.devetel.pagostelsur.config.ApplicationProperties;
import cl.devetel.pagostelsur.services.PagosService;
import cl.devetel.pagostelsur.services.PagosServiceImpl;


@SpringBootTest
@ActiveProfiles("default")
@RunWith(SpringRunner.class)
public class ConfigurationTest {
	
	private static Logger log = LoggerFactory.getLogger(ConfigurationTest.class);

	@TestConfiguration
	static class PagosServiceImplTestContextConfiguration {

		@Bean
		public ApplicationProperties properties() {
			return new ApplicationProperties();
		}
	}
	
	@Autowired
    private ApplicationProperties properties;
    
    
    @Autowired
    private Environment environment;

    @Test
    public void testDevelopmentProfile(){
        String email = properties.getEmail();
        String jndiName = properties.getDbprov().get("jndi-name");
        String ddlAuto = properties.getDbprov().get("ddl-auto");
        String dialect = properties.getDbprov().get("dialect");
        String driver = properties.getDbprov().get("driver-class-name");
        log.info("Profile 1	: " + environment.getActiveProfiles()[0]);
        log.info("Configuracion base de datos PROV");
        log.info("Ddl-auto 	: " + ddlAuto);
        log.info("JNDI name : " + jndiName);
        log.info("Dialect 	: " + dialect);
        log.info("Driver 	: " + driver);
        log.info("**********************************" );
        
        jndiName = properties.getDbcore().get("jndi-name");
        ddlAuto = properties.getDbcore().get("ddl-auto");
        dialect = properties.getDbcore().get("dialect");
        driver = properties.getDbcore().get("driver-class-name");
        log.info("Configuracion base de datos CORE");
        log.info("Ddl-auto 	: " + ddlAuto);
        log.info("JNDI name : " + jndiName);
        log.info("Dialect 	: " + dialect);
        log.info("Driver 	: " + driver);
        log.info("**********************************" );
        
        assertThat(email).contains("default@email.com");
    }
}
